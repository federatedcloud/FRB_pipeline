# Template configuration file for running the pipeline with all of the methods
# by Laura Spitler to find the famous FRB

; necessary information about the data
[data]
filetype=psrfits
directory=./Data
basename=pipe_test8
testing_mode=True

; get information from the fits file header
[GetHeaderInfo]

; used to combine 2 datafiles (for Aricebo data)
[combine_mocks]
file1=4bit-p2030.20121102.G175.04-00.26.C.b4s0g0.00000
file2=4bit-p2030.20121102.G175.04-00.26.C.b4s1g0.00000

; Find Radio Frequency Interference (RFI)
[rfifind]
;rfi_time = 5.0                  ; sec, time over which stats are calc'd in rfifind (d: 30)
;tsig = 8                        ; The +/-sigma cutoff to reject time-domain chunks (d: 10)
;fsig = 6                        ; The +/-sigma cutoff to reject freq-domain chunks (d: 4)
;chanfrac = 0.3                  ; The fraction of bad channels that will mask a full interval (d: 0.7)
;intfrac = 0.3                   ; The fractino fo bad intervals that will mask a full chanenel (d: 0.3)
rfi_dir = ./Data/RFI
#rfi_dir = ./Data
rfi_flags = -psrfits -time 5.0 -timesig 8. -freqsig 6. -chanfrac 0.3 -intfrac 0.3
rfi_otherflags = -noscales -nooffsets -noweights

; prepsubband
; Needs: directory, basename, prep_usemask, dmlow, ddm, ndm, downsample,
;           nsub, prep_otherflags, filetype
[prepsubband]
; filetype= psrfits
prep_dir= ./Data
prep_usemask= True 
;dmlow= 500
;ddm= 5
;dmcalls= 1
;dmspercall= 20
;nsub= 960 
;dsubDM= 0.0                         ; dmspercall
downsample= 1
prep_flags= -psrfits -nsub 960 -lodm 500.000000 -dmstep 5.000000 -numdms 20 -downsamp 1 
prep_otherflags= -noscales -nooffsets -noweights

; single_pulse_search
[sps]
sp_dir= ./Data
cl_dir= ./Data
sp_exe= "./Modules/mod_sp.py"
sp_flags= -p -m 5.000000 -d 1
sp_otherflags= --noflag --clust --iter

sp_modified = True              ; Uses Spitler's mod_sp.py, with FIXED FLAGS (does not use sp_flags)
w_max= 5.0                      ; Max pulse width (seconds)
cl_width= 0.5                   ; maximum allowed width (s) between peaks in time series for clustering


; Generate a masked dynamic spectra
[maskdata]
md_flags = -nobary -noweights -nooffsets -noscales -mask ; flags for maskdata
md_otherflags = -o junk.data    ; other flags for maskdata

; convert output of maskdata to numpy array
[fil2npz]
use_np_array=True               ; Convert data to .npz (default method)
output_npz_file=False           ; Save generated .npz file to disk
filfile=spitler_test


; TODO: modulation index
[modindex]
mi_exec=./Modules/palfa_mi  ; Modulation Index executable
dictionary=./Data/single_pulse/ ; Single_pulse directory
; TODO: plotting


; Organize results
[results]
output_directory=./Results_sps
move_npz_file=True
move_combined_file=True
;move_rfifind_files=True
move_maskdata_file=True
move_txt_files=False
move_png_files=False

